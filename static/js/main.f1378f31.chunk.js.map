{"version":3,"sources":["Config/index.js","Controllers/Wrapper.js","Controllers/API.js","components/Discipline.js","components/Day.js","panels/Schedule.js","components/BottomTab.js","img/persik.png","panels/Main.js","panels/ChatBot.js","App.js","store/store.js","index.js"],"names":["request","options","a","method","data","url","Url","URL","Config","myHeaders","Headers","append","requestOptions","headers","redirect","body","JSON","stringify","fetch","href","response","status","json","result","console","log","error","API","route","group","Discipline","props","disc","cabinet","num","para","teacher","time","className","style","alignItems","width","margin","padding","backgroundColor","borderRadius","Day","day","nameDay","marginBottom","alignSelf","border","map","item","days","Schedule","useState","groups","setGroups","setSelectedGroup","ovenWeek","setOvenWeek","oddWeek","setOddWeek","typeWeek","setTypeWeek","typeView","setTypeView","useRef","getListGroup","label","value","inputChangeGroup","event","target","getGroupSchedule","useEffect","getAllGroups","paddingBottom","marginTop","placeholder","onInputChange","onChange","mode","selected","onClick","DatePicker","getSelectedDay","Date","getDay","endDate","selectDate","now","labelFormat","color","Object","keys","BottomTab","change","activePanel","text","height","Main","display","src","persik","marginLeft","weight","marginRight","after","bridge","send","e","checked","ChatBot","App","setActivePanel","setUser","popout","setPopout","user","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","fetchData","id","currentTarget","dataset","to","store","createStore","state","action","key","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f1378f31.chunk.js","sourcesContent":["export default {\r\n    url: 'http://127.0.0.1:5000/',\r\n}\r\n","import Config from '../Config'\r\n\r\nexport const request = async (options) => {\r\n    let {method, data, url} = options\r\n    let Url = new URL(Config.url + url)\r\n    let myHeaders = new Headers()\r\n    myHeaders.append('Content-Type', 'application/json')\r\n    myHeaders.append('Access-Control-Allow-Origin', '*')\r\n    myHeaders.append('Access-Control-Allow-Methods', 'DELETE, POST, GET, OPTIONS')\r\n    myHeaders.append('Access-Control-Allow-Headers', 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With')\r\n\r\n    let requestOptions = {\r\n        method: method,\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    }\r\n\r\n    if (method !== 'GET') {\r\n        requestOptions.body = JSON.stringify(data)\r\n    }\r\n    else if (data) {\r\n        //Object.keys(data).forEach(key => Url.searchParams.append(key, data[key]))\r\n    }\r\n    let response = await fetch(Url.href, requestOptions)\r\n    if (response.status === 200) {\r\n        let result = await response.json()\r\n        console.log(Url.href, result)\r\n        return result\r\n    }\r\n    else {\r\n        console.log('error', response.error)\r\n    }\r\n}\r\n","import { request } from './Wrapper'\r\n\r\nclass API {\r\n    static getListGroup(data) {\r\n        let options = {\r\n            url: 'groups',\r\n            method: 'GET',\r\n            data: {...data}\r\n        }\r\n        return request(options)\r\n    }\r\n\r\n    static getGroupSchedule(data) {\r\n        let route  = data?.group\r\n        let options = {\r\n            url: `/group/${route}`,\r\n            method: 'GET',\r\n            data: {...data}\r\n        }\r\n        return request(options)\r\n    }\r\n}\r\n\r\nexport default API\r\n","import { Div, Text } from '@vkontakte/vkui'\r\n\r\n\r\nexport function Discipline(props) {\r\n    const {cabinet, num, para, teacher, time} = props.disc\r\n    /*{cabinet: \"212\", num: 2, para: \"Русский язык\", teacher: \"Кокорин С.А.\", time: \"12:00\"}*/\r\n    return (\r\n        <Div className={'row'} style={{alignItems: 'center', width: '100%'}}>\r\n            <div style={{margin: 10, padding: 10, backgroundColor: '#47BFEE', borderRadius: 10}}>\r\n                <Text>{num + 1}</Text>\r\n            </div>\r\n            <div className={'column'}>\r\n                <Text>{'Дисциплина: ' + para}</Text>\r\n                <Text>{'Преподаватель: ' + teacher}</Text>\r\n                <div>\r\n                    <Text>{'Время начала: ' + time}</Text>\r\n                    <Text>{'Кабинет: ' + cabinet}</Text>\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n        </Div>\r\n    )\r\n}\r\n","import { Text } from '@vkontakte/vkui'\r\nimport { Discipline } from './Discipline'\r\nimport { black } from 'chalk'\r\n\r\nexport function Day({day, nameDay}) {\r\n\r\n\r\n    return(\r\n        <div className={'column'} style={{margin: 10, marginBottom: 30}}>\r\n            <Text style={{alignSelf: 'center'}}>{nameDay}</Text>\r\n            <div style={{border: '1px solid #004D6B', borderRadius: 15}}>\r\n                {\r\n                    day.map(item => <Discipline disc={item}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n    Button, Div, Panel, PanelHeader, ScreenSpinner, Select, Tabs,\r\n    TabsItem, Text\r\n} from '@vkontakte/vkui'\r\n\r\nimport API from '../Controllers/API'\r\nimport DatePicker from 'react-horizontal-datepicker'\r\nimport { Day } from '../components/Day'\r\n\r\nconst days = {\r\n    0: 'Понедельник',\r\n    1: 'Вторник',\r\n    2: 'Среда',\r\n    3: 'Четверг',\r\n    4: 'Пятница',\r\n    5: 'Суббота',\r\n    6: 'Воскресенье',\r\n}\r\n\r\n\r\nexport function Schedule() {\r\n\r\n    const [groups, setGroups] = useState(null)\r\n\r\n    const [schedule, setSсhedule] = useState(null)\r\n\r\n    const [selectedGroup, setSelectedGroup] = useState(null)\r\n\r\n    const [ovenWeek, setOvenWeek] = useState(null)\r\n\r\n    const [oddWeek, setOddWeek] = useState(null)\r\n\r\n\r\n    const [typeWeek, setTypeWeek] = useState('oven')\r\n\r\n    const [typeView, setTypeView] = useState('week')\r\n\r\n\r\n    const myRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        getAllGroups()\r\n    }, [])\r\n\r\n    async function getAllGroups() {\r\n        let result = await API.getListGroup()\r\n        let groups = result.map(item => ({label: item, value: item}))\r\n        setGroups(groups)\r\n    }\r\n\r\n    async function inputChangeGroup(event) {\r\n        let group = event.target.value\r\n        setSelectedGroup(group)\r\n        let data = {\r\n            group: group\r\n        }\r\n        let result = await API.getGroupSchedule(data)\r\n        setOvenWeek(result[0])\r\n        setOddWeek(result[1])\r\n        console.log(result)\r\n    }\r\n\r\n    function inputChangeDay(event) {\r\n        let date = new Date(event)\r\n        let day = date.getDay()\r\n    }\r\n\r\n\r\n    return (\r\n        <Panel>\r\n            <Div style={{paddingBottom: 20}}>\r\n                <PanelHeader>Расписание</PanelHeader>\r\n                {\r\n                    groups ?\r\n                        <div style={{marginTop: 20}}>\r\n                            <Select\r\n                                placeholder={'Выберите группу'}\r\n                                //searchable={true}\r\n                                options={groups}\r\n                                onInputChange={inputChangeGroup}\r\n                                onChange={inputChangeGroup}\r\n                            />\r\n                        </div>\r\n                        : <ScreenSpinner/>\r\n                }\r\n                <div style={{marginTop: 20, width: '95%'}}>\r\n                    {/*<Select\r\n                        placeholder={'Выберите день'}\r\n                        //searchable={true}\r\n                        options={daysOfWeek}\r\n                        onInputChange={inputChangeDay}\r\n                        onChange={inputChangeDay}\r\n                    />*/}\r\n\r\n                </div>\r\n\r\n                {/*табы выбора*/}\r\n                <div\r\n                    style={{width: '100%'}}\r\n                >\r\n                    <Tabs\r\n                        mode={'segmented'}\r\n                    >\r\n                        <TabsItem\r\n                            selected={typeView === 'week'}\r\n                            onClick={() => {\r\n                                setTypeView('week')\r\n                            }}\r\n                        >\r\n                            Неделя\r\n                        </TabsItem>\r\n                        <TabsItem\r\n                            selected={typeView === 'day'}\r\n                            onClick={() => {\r\n                                setTypeView('day')\r\n                            }}\r\n                        >\r\n                            День\r\n                        </TabsItem>\r\n                    </Tabs>\r\n                </div>\r\n                {\r\n                    typeView === 'day' ?\r\n                        <DatePicker\r\n                            getSelectedDay={inputChangeDay}\r\n                            endDate={100}\r\n                            selectDate={Date.now()}\r\n                            labelFormat={'MMMM'}\r\n                            color={'#374e8c'}\r\n                        /> : null\r\n                }\r\n\r\n                <div\r\n                    style={{width: '100%', marginTop: 10}}\r\n                >\r\n                    <Tabs\r\n                        mode={'segmented'}\r\n                    >\r\n                        <TabsItem\r\n                            selected={typeWeek === 'oven'}\r\n                            onClick={() => {\r\n                                setTypeWeek('oven')\r\n                            }}\r\n                        >\r\n                            Четная\r\n                        </TabsItem>\r\n                        <TabsItem\r\n                            selected={typeWeek === 'odd'}\r\n                            onClick={() => {\r\n                                setTypeWeek('odd')\r\n                            }}\r\n                        >\r\n                            Нечетная\r\n                        </TabsItem>\r\n                    </Tabs>\r\n                </div>\r\n                {/*----*/}\r\n                <div>\r\n                    {\r\n                        typeWeek === 'oven' ?\r\n                            <div className={''}>\r\n                                {\r\n                                    ovenWeek ?\r\n                                        Object.keys(ovenWeek).map((day) => {\r\n                                            return (\r\n                                                <Day day={ovenWeek[day]} nameDay={days[day]}/>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </div> :\r\n                            <div className={''}>\r\n                                {\r\n                                    oddWeek ?\r\n                                        Object.keys(oddWeek).map((day) => {\r\n                                            return (\r\n                                                <Day day={oddWeek[day]} nameDay={days[day]}/>\r\n                                            )\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n            </Div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\n","import { Button, Tabbar, TabbarItem, Text } from '@vkontakte/vkui'\r\nimport React from 'react'\r\nimport { Icon28MailOutline, Icon28ListOutline, Icon28HomeOutline} from '@vkontakte/icons';\r\n\r\n\r\nexport function BottomTab({change, activePanel}) {\r\n    return(\r\n        <Tabbar>\r\n            <TabbarItem\r\n                selected={activePanel === 'main'}\r\n                onClick={change}\r\n                data-to=\"main\"\r\n                text={'Главная'}\r\n            >\r\n                <Icon28HomeOutline width={50} height={25}/>\r\n            </TabbarItem>\r\n            <TabbarItem\r\n                selected={activePanel === 'schedule'}\r\n                onClick={change}\r\n                data-to=\"schedule\"\r\n                text={'Расписание'}\r\n            >\r\n                <Icon28ListOutline width={50} height={25}/>\r\n            </TabbarItem>\r\n            <TabbarItem\r\n                selected={activePanel === 'chat-bot'}\r\n                onClick={change}\r\n                data-to=\"chat-bot\"\r\n                style={{}}\r\n                text={'Чат бот'}\r\n            >\r\n                <Icon28MailOutline width={50} height={25}/>\r\n            </TabbarItem>\r\n        </Tabbar>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import { Div, Avatar, Panel, Text, PanelHeader, Group, Button, CellButton, Switch, Cell } from '@vkontakte/vkui'\r\nimport { Icon20EducationOutline, Icon24Reply } from '@vkontakte/icons'\r\n\r\n\r\nimport persik from '../img/persik.png'\r\nimport bridge from '@vkontakte/vk-bridge'\r\n\r\nexport function Main() {\r\n\r\n    function ShareApp() {\r\n        bridge.send(\"VKWebAppShare\", {\"link\": \"https://vk.com/app6909581#hello\"});\r\n    }\r\n\r\n    function SwitchStartScreen(e) {\r\n        let checked = e.target.checked\r\n        if(checked) {\r\n            bridge.send(\"VKWebAppStorageSet\", {\"key\": \"scheduleStart\", \"value\": \"true\"});\r\n        }\r\n        else {\r\n            bridge.send(\"VKWebAppStorageSet\", {\"key\": \"scheduleStart\", \"value\": \"false\"});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Panel>\r\n            <PanelHeader>Главная</PanelHeader>\r\n            <Div>\r\n                <Group mode={'card'}>\r\n                    <div style={{display: 'flex', alignItems: 'center'}}>\r\n                        <Avatar src={persik}/>\r\n                        <Text style={{marginLeft: 50}}>Nick</Text>\r\n                    </div>\r\n                </Group>\r\n                <Group>\r\n                    <div className={'row'}>\r\n                        <Text weight={800} style={{marginLeft: 10, marginRight: 10}}>{`Учебная группа: ${'PI'}`}</Text>\r\n                        <Icon20EducationOutline/>\r\n                    </div>\r\n                    <CellButton style={{marginTop: 10}} after={<Icon24Reply/>} onClick={ShareApp}>Поделится приложением</CellButton>\r\n                </Group>\r\n                <Group>\r\n                    <Cell after={<Switch onClick={SwitchStartScreen}/>}>Открывать расписание при старте</Cell>\r\n\r\n                </Group>\r\n            </Div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\n","import { Panel, Text } from '@vkontakte/vkui'\r\n\r\nexport function ChatBot() {\r\n    return (\r\n        <Panel>\r\n                <Text>Chat bot</Text>\r\n        </Panel>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport { View, AdaptivityProvider, AppRoot} from '@vkontakte/vkui'\r\nimport '@vkontakte/vkui/dist/vkui.css'\r\n\r\nimport { Schedule } from './panels/Schedule'\r\nimport { BottomTab } from './components/BottomTab'\r\nimport { Main } from './panels/Main'\r\nimport { ChatBot } from './panels/ChatBot'\r\n\r\nimport style from './style.css'\r\n\r\n\r\nconst App = () => {\r\n    const [activePanel, setActivePanel] = useState('schedule')\r\n    const [fetchedUser, setUser] = useState(null)\r\n    const [popout, setPopout] = useState(null)\r\n\r\n    useEffect(() => {\r\n        bridge.subscribe(({detail: {type, data}}) => {\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                const schemeAttribute = document.createAttribute('scheme')\r\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light'\r\n                document.body.attributes.setNamedItem(schemeAttribute)\r\n            }\r\n        })\r\n\r\n        async function fetchData() {\r\n            const user = await bridge.send('VKWebAppGetUserInfo')\r\n            setUser(user)\r\n            setPopout(null)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    const go = e => {\r\n        bridge.send(\"VKWebAppTapticImpactOccurred\", {\"style\": \"heavy\"});\r\n        setActivePanel(e.currentTarget.dataset.to)\r\n    }\r\n\r\n    return (\r\n        <AdaptivityProvider>\r\n            <AppRoot>\r\n                <View\r\n                    activePanel={activePanel}\r\n                    popout={popout}\r\n                >\r\n                    <Main id='main'/>\r\n                    <Schedule id=\"schedule\"/>\r\n                    <ChatBot id='chat-bot'/>\r\n                </View>\r\n                <BottomTab change={go} activePanel={activePanel}/>\r\n            </AppRoot>\r\n        </AdaptivityProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore } from 'redux'\r\n\r\nconst initialState = {\r\n    key: 'value'\r\n}\r\n\r\nconst store = createStore(reducer, initialState)\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction dispatch(action) {\r\n    {\r\n        odd: {}\r\n        oven: {}\r\n    }\r\n}\r\n\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\n\r\n// Init VK  Mini App\r\nbridge.send('VKWebAppInit')\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'))\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    import('./eruda').then(({default: eruda}) => {\r\n    }) //runtime download\r\n}\r\n"],"sourceRoot":""}